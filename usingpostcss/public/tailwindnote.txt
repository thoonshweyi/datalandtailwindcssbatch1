=>texttransform
    "uppercase"         = text-transform:uppercase;
    "lowercase"         = text-transform:lowercase;
    "capitalize"        = text-transform:capitalize;
    "normal-case"       = text-transform:none;

=>textdecoration
    "underline"         = text-decoration:underline;
    "line-through"      = text-decoration:line-through;
    "overline"          = text-decoration:overline;
    "no-underline"      = text-decoration:none;

    -----
    decoration-thickness

        "docoration-0"
        "docoration-1"
        "docoration-2"
        "docoration-4"
        "docoration-8"
    ----
    decoration-style
        "decoration-solid"          //tailwind default
        "decoration-dashed"  
        "decoration-dotted"  
        "decoration-double"  
        "decoration-wavy"  
    ---
    decoration-color
        at color chapter

=>textunderlineoffset
    "underline underline-offset-0"
    "underline underline-offset-1"
    "underline underline-offset-2"
    "underline underline-offset-4"
    "underline underline-offset-8"
    "underline underline-offset-auto"

=>border
    -border-width

        "border-0"      = border-width:0px;
        "border"        = border-width:1px;
        "border-2"
        "border-4"
        "border-8"

        "border-t-0"      = border-top-width:0px;
        "border-t"        = border-top-width:1px;
        "border-t-2"
        "border-t-4"
        "border-t-8"

        "border-r-0"      = border-right-width:0px;
        "border-r"        = border-right-width:1px;
        "border-r-2"
        "border-r-4"
        "border-r-8"

        "border-b-0"      = border-bottom-width:0px;
        "border-b"        = border-bottom-width:1px;
        "border-b-2"
        "border-b-4"
        "border-b-8"

        "border-l-0"      = border-left-width:0px;
        "border-l"        = border-left-width:1px;
        "border-l-2"
        "border-l-4"
        "border-l-8"
        ----------------------

        "border-x-0"      = border-left-width:0px;border-right-width:0px;
        "border-x"        = border-left-width:1px;border-right-width:1px;
        "border-x-2"
        "border-x-4"
        "border-x-8"

        "border-y-0"      = border-top-width:0px;border-bottom-width:0px;
        "border-y"        = border-top-width:1px;border-bottom-width:1px;
        "border-y-2"
        "border-y-4"
        "border-y-8"
    
    - border-style
        "border-solid"          //tailwind default
        "border-dashed"
        "border-dotted"
        "border-double"
        "border-none"
        "border-hidden"         //equal to "border-none"
    
    - border-color 
        at color chapter 

=>border-radius
    "rounded-none"      = border-radius:0px;
    "rounded-sm"        = border-radius:2px;
    "rounded"           = border-radius:4px;
    "rounded-md"        = border-radius:6px;
    "rounded-lg"
    "rounded-xl"
    "rounded-2xl"
    "rounded-3xl"
    "rounded-full"

    "rounded-tl-none"      = border-top-left-radius:0px;
    "rounded-tl-sm"        = border-top-left-radius:2px;
    "rounded-tl"           = border-top-left-radius:4px;
    "rounded-tl-md"        = border-top-left-radius:6px;
    "rounded-tl-lg"
    "rounded-tl-xl"
    "rounded-tl-2xl"
    "rounded-tl-3xl"
    "rounded-tl-full"

    "rounded-tr-none"      = border-top-right-radius:0px;
    "rounded-tr-sm"        = border-top-right-radius:2px;
    "rounded-tr"           = border-top-right-radius:4px;
    "rounded-tr-md"        = border-top-right-radius:6px;
    "rounded-tr-lg"
    "rounded-tr-xl"
    "rounded-tr-2xl"
    "rounded-tr-3xl"
    "rounded-tr-full"

    "rounded-br-none"      = border-bottom-right-radius:0px;
    "rounded-br-sm"        = border-bottom-right-radius:2px;
    "rounded-br"           = border-bottom-right-radius:4px;
    "rounded-br-md"        = border-bottom-right-radius:6px;
    "rounded-br-lg"
    "rounded-br-xl"
    "rounded-br-2xl"
    "rounded-br-3xl"
    "rounded-br-full"

    "rounded-bl-none"      = border-bottom-left-radius:0px;
    "rounded-bl-sm"        = border-bottom-left-radius:2px;
    "rounded-bl"           = border-bottom-left-radius:4px;
    "rounded-bl-md"        = border-bottom-left-radius:6px;
    "rounded-bl-lg"
    "rounded-bl-xl"
    "rounded-bl-2xl"
    "rounded-bl-3xl"
    "rounded-bl-full"

    "rounded-t-none"      = border-top-left-radius:0px;border-top-right-radius:0px;
    "rounded-t-sm"        = border-top-left-radius:2px;border-top-right-radius:2px;
    "rounded-t"           = border-top-left-radius:4px;border-top-right-radius:4px;
    "rounded-t-md"        = border-top-left-radius:6px;border-top-right-radius:6px;
    "rounded-t-lg"
    "rounded-t-xl"
    "rounded-t-2xl"
    "rounded-t-3xl"
    "rounded-t-full"

    "rounded-b-none"      = border-bottom-left-radius:0px;border-bottom-right-radius:0px;
    "rounded-b-sm"        = border-bottom-left-radius:2px;border-bottom-right-radius:2px;
    "rounded-b"           = border-bottom-left-radius:4px;border-bottom-right-radius:4px;
    "rounded-b-md"        = border-bottom-left-radius:6px;border-bottom-right-radius:6px;
    "rounded-b-lg"
    "rounded-b-xl"
    "rounded-b-2xl"
    "rounded-b-3xl"
    "rounded-b-full"

    "rounded-l-none"      = border-top-left-radius:0px;border-bottom-left-radius:0px;
    "rounded-l-sm"        = border-top-left-radius:2px;border-bottom-left-radius:2px;
    "rounded-l"           = border-top-left-radius:4px;border-bottom-left-radius:4px;
    "rounded-l-md"        = border-top-left-radius:6px;border-bottom-left-radius:6px;
    "rounded-l-lg"
    "rounded-l-xl"
    "rounded-l-2xl"
    "rounded-l-3xl"
    "rounded-l-full"

    "rounded-r-none"      = border-top-right-radius:0px;border-bottom-right-radius:0px;
    "rounded-r-sm"        = border-top-right-radius:2px;border-bottom-right-radius:2px;
    "rounded-r"           = border-top-right-radius:4px;border-bottom-right-radius:4px;
    "rounded-r-md"        = border-top-right-radius:6px;border-bottom-right-radius:6px;
    "rounded-r-lg"
    "rounded-r-xl"
    "rounded-r-2xl"
    "rounded-r-3xl"
    "rounded-r-full"

=>outline
    -outline-style (*style go first in outline)

        "outline"           = outline-style:solid;
        "outline-dashed"
        "outline-dotted" 
        "outline-double"
        "outline-none"
        "outline-hidden"

    -outline-width
        outline-0           = outline-width:0px;
        outline-1
        outline-2
        outline-4
        outline-8
        
    -outline-offset
        "outline-offset-0"
        "outline-offset-1"
        "outline-offset-2"
        "outline-offset-4"
        "outline-offset-8"

=>opacity
    opacity-0;          = opacity:0;
    opacity-10;         = opacity:0.1;
    opacity-20;         = opacity:0.2;
    opacity-30;         = opacity:0.3;
    opacity-40;         = opacity:0.4;
    opacity-50;         = opacity:0.5;
    opacity-60;         = opacity:0.6;
    opacity-70;         = opacity:0.7;
    opacity-80;         = opacity:0.8;
    opacity-90;         = opacity:0.9;
    opacity-100;        = opacity:1;

    opacity-5
    opacity-25
    opacity-75
    opacity-95

=>shadow
    "shadow-none"       = box-shadow:0 0 0 #000;
    "shadow-sm"         
    "shadow"
    "shadow-md"
    "shadow-lg"
    "shadow-xl"
    "shadow-2xl"
    "shadow-inner"      = box-shadow: inset h v b c;
    
    *box-shadow: h v b c, h v b c, ...;

    ----------------(or)-----------------

    "drop-shadow-none"      = filter: drop-shadow(0 0 0 #000);
    "drop-shadow-sm"
    "drop-shadow"
    "drop-shadow-md"
    "drop-shadow-lg"
    "drop-shadow-xl"
    "drop-shadow-2xl"       
    * filter: drop-shadow(h v b c) drop-shadow(h v b c) ...;

    - shadow-color
        at color chapter

=>filterfunction

    =>blur
        'blur-none'       = filter:blur(0px);
        'blur-sm'
        'blur'
        'blur-md'
        'blur-lg'
        'blur-xl'
        'blur-2xl'
        'blur-3xl'

    =>brightness
        "brightness-0"      = filter:brightness(0);     //black
        "brightness-100"    = filter:brightness(1);     //normal
        "brightness-200"    = filter:brightness(2);     //bright

        "brightness-50"     = filter:brightness(0.5);
        "brightness-75"     = filter:brightness(0.75);
        "brightness-125"    = filter:brightness(1.25);
        "brightness-150"    = filter:brightness(1.5);

    =>contrast
        "contrast-0"      = filter:contrast(0);     //gray
        "contrast-100"    = filter:contrast(1);     //normal
        "contrast-200"    = filter:contrast(2);     //colorful bright

        "contrast-50"     = filter:contrast(0.5);
        "contrast-75"     = filter:contrast(0.75);
        "contrast-125"    = filter:contrast(1.25);
        "contrast-150"    = filter:contrast(1.5);

    =>grayscale,invert,sepia

        "grayscale-0"     = filter:grayscale(0%);    //black & white photo
        "grayscale"       = filter:grayscale(100%);  //normal photo

        "invert-0"          = filter:invert(0%);    //color invert photo
        "invert"            = filter:invert(100%);  //normal photo

        "sepia-0"          = filter:sepia(0%);    //gray photo
        "sepia"            = filter:sepia(100%);  //normal photo

    =>huerotate
        "hue-rotate-0"      = filter:hue-rotate(0deg);
        "hue-rotate-90"     = filter:hue-rotate(90deg); //green photo
        "hue-rotate-180"    = filter:hue-rotate(180deg);//blue  photo

        "hue-rotate-30"
        "hue-rotate-60"

    =>saturate
        "saturate-0"      = filter:saturate(0);     //gray photo
        "saturate-100"    = filter:saturate(1);     //normal
        "saturate-200"    = filter:saturate(2);     //colorful photo

        "saturate-50"     = filter:saturate(0.5);
        "saturate-150"    = filter:saturate(1.5);


=>tablelayout
    "table-auto"        = table-layout:auto;
    "table-fixed"       = table-layout:fixed;

    ------------

    "border-collapse"   = border-collapse:collapse;
    "border-separate"   = border-collapse:separate;

    ------------

    "border-spacing-0"          = border-spacing:0px 0px;
    "border-spacing-x-0"
    "border-spacing-y-0"
    /*
        px
        0 0.5 1 1.5 2 2.5 3 3.5 4=1rem(16px)
        5 6 7 8 9 10 11 12
        14 16
        20 24 28 32 36 40 44 48 52 56 60 64
        72 80 
        96
    */
    
=>transform function
    =>translate
        "translate-x-0"     = transform:translateX(0);
        "translate-y-0"     = transform:translateY(0);
        /*
            px
            0 0.5 1 1.5 2 2.5 3 3.5 4=1rem(16px)
            5 6 7 8 9 10 11 12
            14 16
            20 24 28 32 36 40 44 48 52 56 60 64
            72 80 
            96
        */
        

        "translate-x-1/2"   = transform:translateX(50%);
        "translate-y-1/2"   = transform:translateY(50%);

        "translate-x-full"   = transform:translateX(100%);
        "translate-y-full"   = transform:translateY(100%);

    =>rotate
        "rotate-0"          = transform:rotate(0deg);
        "rotate-45"         = transform:rotate(45deg);
        "rotate-90"         = transform:rotate(90deg);
        "rotate-180"        = transform:rotate(180deg);

        "rotate-1"
        "rotate-2"
        "rotate-3"

        "rotate-6"
        "rotate-12"

    =>scale
        "scale-0"           = transform:scale(0);
        "scale-x-0"         = transform:scaleX(0);
        "scale-y-0"         = transform:scaleY(0);

        "scale-100"           = transform:scale(1);
        "scale-x-100"         = transform:scaleX(1);
        "scale-y-100"         = transform:scaleY(1);

        "scale-200"           = transform:scale(2);
        "scale-x-200"         = transform:scaleX(2);
        "scale-y-200"         = transform:scaleY(2);

        "scale-50"           = transform:scale(0.5);
        "scale-x-50"         = transform:scaleX(0.5);
        "scale-y-50"         = transform:scaleY(0.5);

        "scale-75"           = transform:scale(0.75);
        "scale-x-75"         = transform:scaleX(0.75);
        "scale-y-75"         = transform:scaleY(0.75);

        "scale-125"           = transform:scale(1.25);
        "scale-x-125"         = transform:scaleX(1.25);
        "scale-y-125"         = transform:scaleY(1.25);

        "scale-150"           = transform:scale(1.5);
        "scale-x-150"         = transform:scaleX(1.5);
        "scale-y-150"         = transform:scaleY(1.5);

    => skew
        skew-x-0                = transform:skewX(0deg);
        skew-y-0                = transform:skewY(0deg);

        skew-x-1                = transform:skewX(1deg);
        skew-y-1                = transform:skewY(0deg);

        skew-x-2                = transform:skewX(2deg);
        skew-y-2                = transform:skewY(2deg);

        skew-x-3                = transform:skewX(3deg);
        skew-y-3                = transform:skewY(3deg);

        skew-x-6                = transform:skewX(6deg);
        skew-y-6                = transform:skewY(6deg);

        skew-x-12               = transform:skewX(12deg);
        skew-y-12               = transform:skewY(12deg);


=>transition

    "transition"    //default transition of tailwind

    "duration-75"       = transition-duration:75ms;
    "duration-100"      = transition-duration:100ms;
    "duration-200"      = transition-duration:200ms;
   *"duration-300"      = transition-duration:300ms;
   *"duration-500"      = transition-duration:500ms;
    "duration-700"      = transition-duration:700ms;
   *"duration-1000"     = transition-duration:1000ms;

    "ease-in"           = transition-timing-function:ease-in;
    "ease-out"          = transition-timing-function:ease-out;
    "ease-in-out"       = transition-timing-function:ease-in-out;
    "ease-linear"       = transition-timing-function:linear;

    "delay-75"       = transition-delay:75ms;
    "delay-100"      = transition-delay:100ms;
    "delay-200"      = transition-delay:200ms;
   *"delay-300"      = transition-delay:300ms;
   *"delay-500"      = transition-delay:500ms;
    "delay-700"      = transition-delay:700ms;
   *"delay-1000"     = transition-delay:1000ms;

=>resizeanduserselect
    "resize-none"       = resize:none;
    "resize-x"          = resize:horizontal;
    "resize-y"          = resize:vertical;
    "resize"            = resize:both;

    "select-none"       = user-select:none;
    "select-auto"       = user-select:auto;
    "select-text"       = user-select:text;
    "select-all"        = user-select:all;

=>color
    *gray       *red        *green      *blue       *pink
    slate       orange      emerald     indigo      rose
    zinc        amber       teal        violet
    neutral     yellow      cyan        purple
    stone       lime        sky         fuchsia

    /*
        value 50,100,200,300,400,500,600,700,800,900
    */

    black
    white
    ------------------------------------------------------------
    "text-color-value"
    "text-transparent"
    "text-inherit"
    "text-current"

    =>textdecorationcolor
        "decoration-color-value"
        "decoration-transparent"
        "decoration-inherit"
        "decoration-current"

    =>boxshadowcolor
        "shadow-color-value"

    =>bordercolor
        "border-color-value"
=>background
    =>backgroundcolor
        "bg-color-value"
        "bg-transparnt"
        "bg-inherit"
    
    =>backgroundimage
        - direction
            "bg-gradient-to-l"
            "bg-gradient-to-r"
            "bg-gradient-to-t"
            "bg-gradient-to-b"

            "bg-gradient-to-tl"
            "bg-gradient-to-bl"
            "bg-gradient-to-tr"
            "bg-gradient-to-br"

        - gradientcolors
            "from-color-value"
            "to-color-value"
            "via-color-value"

            "from-white"
            "from-black"
            "from-transparent"

            "to-white"
            "to-black"
            "to-transparent"

            "via-white"
            "via-black"
            "via-transparent"


            "hover:from-color-value"                            //'from-color-value' will mix from-color and transparent
            "hover:from-color-value hover:to-color-value"
            "hover:from-color-value hover:via-color-value hover:to-color-value"

    =>backgroupdrepeat
        "bg-repeat"
        "bg-repeat-x"
        "bg-repeat-y"
        "bg-no-repeat"

        "bg-repeat-round"
        "bg-repeat-space"

=>float
    "float-left"            = float:left;
    "float-right"           = float:right;
    "float-none"            = float:none;

    "clear-left"            = clear:left;
    "clear-right"           = clear:right;
    "clear-both"            = clear:both;

=>position
    "static"                = position:static;
    "absolute"              = position:absolute;
    "relative"              = position:relative;
    "fixed"                 = position:fixed;   //float to the body   
    "sticky"                = position:sticky;

    - to use with "absolute" and "relative"

    "left-0"                    = left:0;
    "top-0"                     = top:0;
    "right-0"                   = right:0;
    "bottom-0"                  = bottom:0;
        /*
            px
            0.5 1 1.5 2 2.5 3 3.5 4=1rem(16px)
            5 6 7 8 9 10 11 12
            14 16
            20 24 28 32 36 40 44 48 52 56 60 64
            72 80 
            96
        */

    "inset-0"                   = left:0;top:0;bottom:0;right:0;
    "inset-x"                   = left:0;right:0;
    "inset-y"                   = top:0;bottom:0;
        /*
            px
            0.5 1 1.5 2 2.5 3 3.5 4=1rem(16px)
            5 6 7 8 9 10 11 12
            14 16
            20 24 28 32 36 40 44 48 52 56 60 64
            72 80 
            96
        */


    "z-0"                   = z-index:0;    //default
    "z-10"                  = z-index:10;
    "z-20"
    "z-30"
    "z-40"
    "z-50"
    "z-auto"

=>visibility
    "visible"       = visibility:visible;
    "invisible"     = visibility:hidden;

=>display

    'inline'                = display:inline;
    'block'                 = display:block;
    'hidden'                = display:none;
    'flex'                  = display:flex;
    'grid'                  = display:grid;
    'inline-block'          = display:inline-block;  // make element side by side and can play margin

=>centerelement
    =>justify-content and align-item
        -to use with 'flex'
            'justify-center'            = justify-content:center;   //horizontal center
            'justify-start '            = justify-content:start;
            'justify-end'               = justify-content:end;
            'justify-between'           = justify-content:space-between;
            'justify-around'            = justify-content:space-around;
            'justify-evenly'            = justify-content:space-evenly;


            items-center                = align-items:center;
            items-start                 = align-items:start;
            items-end                   = align-items:end;

    =>placeitems
        -to use with "grid"
            place-items-center      = place-items:center;
            place-items-start       = place-items:start;
            place-items-end         = place-items:end;
            place-items-stretch     = place-items:stretch;  //stretch width & height if width & height are not given
            place-items-baseline    = place-items:baseline;

=>order
    *work only with "flex" and "grid"

    'order-1'                 = order:1;
    'order-2'                = order:2;
    'order-3'                 = order:3;
    'order-4 '                = order:4;
    'order-5'                 = order:5;
    'order-6'                 = order:6;
    'order-7'                 = order:7;
    'order-8'                 = order:8;
    'order-9'                 = order:9;
    'order-10'                = order:10;
    'order-11'                = order:11;
    'order-12'                = order:12;

    'order-first'               = order:-9999;
    'order-last'                = order:9999;

    'order-none'                = order:0;

=>width and height
    "w-0"
    /*
        px
        0.5 1 1.5 2 2.5 3 3.5 4=1rem(16px)
        5 6 7 8 9 10 11 12
        14 16
        20 24 28 32 36 40 44 48 52 56 60 64
        72 80 
        96
    */

    "w-auto"        = width:auto;
    "w-1/2"         = width:50%;
    "w-full"        = width:100%;
    "w-screen"      = width:100vw;

    "h-0"
    /*
        px
        0.5 1 1.5 2 2.5 3 3.5 4=1rem(16px)
        5 6 7 8 9 10 11 12
        14 16
        20 24 28 32 36 40 44 48 52 56 60 64
        72 80 
        96
    */

    "h-auto"        = height:auto;
    "h-1/2"         = height:50%;
    "h-full"        = height:100%;
    "h-screen"      = height:100vh;
    *h-1/2 h-full can only give if parent height exist

=>margin and padding
    'm-0'           = margin:0;
    'mx-0'          = margin-left:0;margin-right:0;
    'my-0'          = margin-top:0;margin-bottom:0;
    
    'mt-0'          = margin-top:0;
    'mr-0'          = margin-right:0;
    'mb-0'          = margin-bottom:0;
    'ml-0'          = margin-left:0;

    /*
        px
        0 0.5 1 1.5 2 2.5 3 3.5 4=1rem(16px)
        5 6 7 8 9 10 11 12
        14 16
        20 24 28 32 36 40 44 48 52 56 60 64
        72 80 
        96
    */

    'm-auto'        = margin:auto;
    'mx-auto'                       //move the element to center of parent element
    'my-auto'

    'p-0'           = paddng:0;
    'px-0'          = paddng-left:0;paddng-right:0;
    'py-0'          = paddng-top:0;paddng-bottom:0;
    
    'pt-0'          = paddng-top:0;
    'pr-0'          = paddng-right:0;
    'pb-0'          = paddng-bottom:0;
    'pl-0'          = paddng-left:0;

    /*
        px
        0 0.5 1 1.5 2 2.5 3 3.5 4=1rem(16px)
        5 6 7 8 9 10 11 12
        14 16
        20 24 28 32 36 40 44 48 52 56 60 64
        72 80 
        96
    */

=>container and boxsizing
    "container"

    other size  = width:100%;
    sm          = width:640px;
    md          = width:768px;
    lg          = width:1024px;
    xl          = width:1280x;
    2xl         = width:1500px;
    ------------------------------

    "box-border"    = box-sizing:border-box;        //tailwind default.*border and padding is in element' width
    "box-content"   = box-sizing:content-box;       // border and padding exceed element's width

=>spacebetween
    -Utilities for controlling the space between child elements.
    -set at parent element


    "space-x-0"     = margin-left:0;
    "space-y-0"     = margin-top:0;

    /*
        px
        0 0.5 1 1.5 2 2.5 3 3.5 4=1rem(16px)
        5 6 7 8 9 10 11 12
        14 16
        20 24 28 32 36 40 44 48 52 56 60 64
        72 80 
        96
    */

    "space-x-reverse"   
    
    // utilities to ensure the space is added to the correct side of each element.
    <div class="flex flex-row-reverse space-x-4 space-x-reverse ...">
        <div>01</div>
        <div>02</div>
        <div>03</div>
    </div>
    "flex-row-reverse" will order element from right to left
    - but "space-x-number" is not work
    - "space-x-reverse" must include to work "space-x-number" correctly.

=>gridtemplatecolumns
    - divide element into columns
    * work only with 'grid'
    * set at parent element

    "grid-cols-1"
    "grid-cols-2"
    "grid-cols-3"
    "grid-cols-4"
    "grid-cols-5"
    "grid-cols-6"
    "grid-cols-7"
    "grid-cols-8"
    "grid-cols-9"
    "grid-cols-10"
    "grid-cols-11"
    "grid-cols-12"
    "grid-cols-none"

=>gap
    -Utilities for controlling gutters between 'grid' and 'flex' items.
    -set at parent element

    "gap-0" 
    "gap-x-0"
    "gap-y-0"

    /*
        px
        0 0.5 1 1.5 2 2.5 3 3.5 4=1rem(16px)
        5 6 7 8 9 10 11 12
        14 16
        20 24 28 32 36 40 44 48 52 56 60 64
        72 80 
        96
    */

=>columns
    -set at parent element

    "columns-1"         = columns:1;
    "columns-2"         = columns:2;
    "columns-3"         = columns:3;
    "columns-4"         = columns:4;
    "columns-5"         = columns:5;
    "columns-6"         = columns:6;
    "columns-7"         = columns:7;
    "columns-8"         = columns:8;
    "columns-9"         = columns:9;
    "columns-10"        = columns:10;
    "columns-11"        = columns:11;
    "columns-12"        = columns:12;
    
    "columns-auto"      = columns:auto;

    "columns-3xs"
    "columns-2xs"
    "columns-xs"
    "columns-sm"    
    "columns-md"        
    "columns-lg"        
    "columns-xl"        
    "columns-2xl"  
    "columns-3xl"     
    "columns-4xl"      
    "columns-5xl"  
    "columns-6xl"    
    "columns-7xl"  

=>breakafter and breakbefore
    - use to set a column break
    * to use with "columns"
    * should break columns not exceed "columns" value

    'break-after-column'        = break-before:column;
    'break-before-column'       = break-after:column;

=>aspectratio
    - adjust the element width and height

    "aspect-auto"       = aspect-ratio:auto;
    "aspect-square"     = aspect-ratio:1/1;
    "aspect-video"      = aspect-ratio:16/9;        // Standard video ratio

    


